<%- include('layouts/header.ejs') %>
<h2 class="mb-4">Hii, <%= user.name %></h2>

<div class="row">
    <div class="col-md-3">
        <ul class="list-group">
            <% if (users.length>0) { %>
             <% for( let i = 0; i < users.length ;++i) { %>
                <li class="list-group-item list-group-item-dark curser-pointer user-list" data-id="<%= users[i]._id %>">
                    <img src="<%= users[i].image %>" alt="" width="40px" height="40px">
                    <%= users[i].name %>
                    <% if (users[i].isOnline==='1') { %>
                        <sup class="online-status" id="<%= users[i]._id %>-status">Online</sup>
                    <% } else { %>
                        <sup class="ofline-status" id="<%= users[i]._id %>-status">Ofline</sup>
                    <% } %>
                </li>
             <% } %>
            <% } %>
        </ul>
    </div>
    <div class="col-md-9">
        <h3 class="start-head">Click to Start Chat</h3>
        <div class="chat-section">
            <div id="chat-container">
                <!-- <div class="current-user-chat">
                    <span class="chats">Hii</span>
                </div>
                <div class="distance-user-chat">
                    <span class="chats">Hiii</span>
                </div> -->
            </div>
            <form action="" id="chat-form">
                <input type="text" name="message" placeholder="Enter Message" class="border" id="message" required>
                <input type="submit" value="Send Message" class="btn btn-primary">
            </form>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="deleteChatModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Delete Chat</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <form id="delete-chat-form">
        <div class="modal-body">
            <input type="hidden" name="id" id="delete-message-id">
            <p>Do you want to delete below message?</p>
            <p><b id="delete-message"></b></p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-danger">Delete</button>
        </div>
    </form>
    </div>
</div>
</div>

<script>

    let sender_id='<%=  user._id %>';
    let receiver_id;
    let socket=io('/user-namespace',{
        auth:{
            token:sender_id
        }
    });

    // get user online status
    socket.on('getOnlineUser',(data)=>{
         $('#'+data.user_id+'-status').text("Online");
         $('#'+data.user_id+'-status').removeClass('ofline-status');
         $('#'+data.user_id+'-status').addClass("online-status");

    })

    socket.on('getOflineUser',(data)=>{
         $('#'+data.user_id+'-status').text("Ofline");
         $('#'+data.user_id+'-status').removeClass('online-status');
         $('#'+data.user_id+'-status').addClass("ofline-status");

    })

    $(document).ready(function(){
        $('.user-list').click(function(){
            let userId=$(this).attr('data-id');
            receiver_id=userId;
            $('.start-head').hide();
            $('.chat-section').show();
            socket.emit('existsChat',{sender_id: sender_id,receiver_id:receiver_id});
        })
    });

    // chat save of user
    $('#chat-form').submit((e)=>{
        e.preventDefault();
        let message=$('#message').val();
        // $('#message').val('');
        console.log('submitted');


        $.ajax({
            url:'/saveChat',
            type:'POST',
            data:{sender_id:sender_id,receiver_id:receiver_id,message:message},
            success: function(response){
                if(response.success){
                    $('#message').val("");
                    let chat=response.data.message;
                    let html=`
                        <div class="current-user-chat" id=${response.data._id}>
                            <h5 class="chats">${chat}
                                <i class="fa fa-trash" aria-hidden="true" data-id=${response.data._id} data-toggle="modal" data-target="#deleteChatModal"></i>
                            </h5>
                        </div>
                    `;
                    $('#chat-container').append(html);
                    socket.emit('newChat',response.data)
                    scrollChat();
                }else{
                    alert(response.msg);
                }
            }
        })

    })

    socket.on('loadNewChat',(data)=>{
        // console.log(data);
        if(sender_id==data.receiver_id && receiver_id==data.sender_id){
            let html=`
                <div class="distance-user-chat" id=${data._id}>
                    <h5 class="chats">${data.message}</h5>
                </div>
            `;
            $('#chat-container').append(html);
            
        }
        scrollChat();
    })

    socket.on('loadChats',(data)=>{
        $('#chat-container').html('');
        let chats=data.chats;
        let html='';
        for(let i=0;i<chats.length;++i){
            let addClass='';
            if(chats[i].sender_id==sender_id){
                addClass=`
                    <div class="current-user-chat" id=${chats[i]._id}>
                        <h5 class="chats">${chats[i].message}
                            <i class="fa fa-trash" aria-hidden="true" data-id=${chats[i]._id} data-toggle="modal" data-target="#deleteChatModal"></i>
                        </h5>
                    </div>
                `;
            }else{
                addClass=`
                    <div class="distance-user-chat" id=${chats[i]._id}>
                        <h5 class="chats">${chats[i].message}</h5>
                    </div>
                `;
            }
            html+=addClass;
        }
        $('#chat-container').append(html);
        scrollChat();
    })

    function scrollChat(){
        $('#chat-container').animate({
            scrollTop: $('#chat-container').offset().top+ $('#chat-container')[0].scrollHeight
        },0)
    }

    // delete chat

    $(document).on('click','.fa-trash',function(){
        let msg=$(this).parent().text();
        console.log('clicked',msg);
        $('#delete-message').text(msg);
        $('#delete-message-id').val($(this).attr('data-id'));
    })

    $('#delete-chat-form').submit(function(event){
        event.preventDefault();
        let id=$('#delete-message-id').val();
        console.log(id);

        $.ajax({
            url: '/delete-chat',
            type: 'POST',
            data: {id:id},
            success: function(res){
                if(res.success==true){
                    $('#'+id).remove();
                    $('#deleteChatModal').modal('hide');
                    socket.emit('chatDeleted',id);
                }else{
                    alert(res.msg)
                }
            }
        })
    })

    socket.on('chatMessageDeleted',(id)=>{
        $('#'+id).remove();
    })


    
</script>

<%- include('layouts/footer.ejs') %>